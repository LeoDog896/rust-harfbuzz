name: CI

on:
  push:
    branches: [auto]
  pull_request:
  workflow_dispatch:

jobs:
  linux-ci:
    name: stable, Linux, static linking, no pkg-config
    runs-on: ubuntu-latest
    env:
      HARFBUZZ_SYS_NO_PKG_CONFIG: 1
    steps:
      - uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      # Test the harfbuzz-sys package build to check the 'exclude's. We should
      # do this where the embedded harfbuzz is statically linked, but we don't
      # need to do it for every environment.
      - name: Cargo package
        run: cargo package --manifest-path=harfbuzz-sys/Cargo.toml

      - name: Cargo build
        run: cargo build --all

      - name: Cargo test
        run: cargo test --all
        env:
          RUST_BACKTRACE: 1
      
      - name: ctest tests
        run: cargo run --manifest-path=harfbuzz-sys-test/Cargo.toml

  mac-ci:
    name: stable, macOS, shared library
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo build
        run: cargo build --all

      - name: Cargo test
        run: cargo test --all
        env:
          RUST_BACKTRACE: 1
      
      - name: ctest tests
        run: cargo run --manifest-path=harfbuzz-sys-test/Cargo.toml

  windows-ci:
    name: Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Dependency install
        run: vcpkg install --recurse glib:x64-windows fontconfig:x64-windows freetype:x64-windows cairo:x64-windows

      - name: Cargo build
        run: cargo build --all

      - name: Cargo test
        run: cargo test --all
        env:
          RUST_BACKTRACE: 1

  build_result:
    name: homu build finished
    runs-on: ubuntu-latest
    needs:
      - "linux-ci"
      - "mac-ci"
      - "windows-ci"

    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"

